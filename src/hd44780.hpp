/*
 * HD44780 Driver for RP2040
 *
 * Copyright (C) 2023 JÃ¼rgen Reuter
 *
 * This file is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation; either version 2 of the License,
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * As a special exception to the GNU General Public License, if you
 * distribute this file as part of a program that contains a
 * configuration script generated by Autoconf, you may include it
 * under the same distribution terms that you use for the rest of that
 * program.
 *
 * For updates and more info or contacting the author, visit:
 * <https://github.com/soundpaint>
 *
 * Author's web site: www.juergen-reuter.de
 */

#ifndef HD44780_HPP
#define HD44780_HPP

#include <cstdio>
#include "hd44780-mpu-interface.hpp"

class HD44780 {
public:
  enum screen_height_t { LINES_1, LINES_2, LINES_4 };
  enum screen_width_t { COLUMNS_16, COLUMNS_20 };
  enum pattern_size_t { FONT_5x10, FONT_5x8 };
  enum direction_t { LEFT_TO_RIGHT, RIGHT_TO_LEFT };
  HD44780(HD44780_mpu_interface *hd44780_mpu_interface,
          const screen_width_t screen_width = COLUMNS_20,
          const screen_height_t screen_height = LINES_2,
          const pattern_size_t pattern_size = FONT_5x8,
          const HD44780_mpu_interface::transfer_mode_t preferred_transfer_mode =
          HD44780_mpu_interface::TRANSFER_MODE_EIGHT_BIT);
  virtual ~HD44780();
  bool supports_backlight_ctrl() const;
  bool set_backlight_enabled(const bool enable);
  bool is_backlight_enabled() const;
  void clear_display();
  void return_home();
  void set_display_enabled(const bool enable);
  void set_cursor_enabled(const bool enable);
  void set_cursor_blinking_enabled(const bool enable);
  void reset_display_control();
  void shift(const direction_t direction, const bool cursor_only = false);
  void set_text_direction(const direction_t direction);
  void set_auto_scroll_enabled(const bool enable);
  void set_character_pattern(const uint8_t character_code,
                             const uint8_t pattern[]);
  void set_cursor_position(const uint8_t column, const uint8_t line);
  size_t write(const char *buffer);
  size_t write(const uint8_t *buffer, const size_t size);
  virtual size_t write_data(const uint8_t data);
private:
  HD44780_mpu_interface *hd44780_mpu_interface;
  uint8_t _entry_mode_set;
  uint8_t _display_control;
  uint8_t _function_set;
  uint8_t _initialized;
  uint8_t _number_of_lines;
  uint8_t _line_start_addr[4];
  void exec_instruction(const uint8_t op_code);
  void exec_entry_mode_set();
  void exec_display_control();
  void exec_function_set();
  void init(const screen_width_t screen_width,
            const screen_height_t screen_height,
            const pattern_size_t pattern_size,
            const HD44780_mpu_interface::transfer_mode_t
            preferred_transfer_mode);
};

#endif /* HD44780_HPP */

/*
 * Local variables:
 *   mode: c++
 *  coding: utf-8
 * End:
 */
